package com.foxrainbxm.tab2;

import java.util.ArrayList;

import android.content.Context;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.foxrainbxm.Common;
import com.foxrainbxm.FoxRainBXM;
import com.foxrainbxm.R;
import com.foxrainbxm.base.BaseFragment;
import com.foxrainbxm.base.FragmentMain;
import com.foxrainbxm.jjlim.base.ContentMessageParser;
import com.foxrainbxm.jjlim.base.ContentVO;
import com.foxrainbxm.jjlim.base.HttpContentApi;
import com.foxrainbxm.jjlim.base.HttpContentTask.OnContentTaskResultListener;
import com.foxrainbxm.jjlim.base.NanumFont;
import com.foxrainbxm.jjlim.base.TextUtil;
import com.foxrainbxm.jjlim.content.ContentDetailView;
import com.foxrainbxm.jjlim.libary.ExpandableHeightListView;
import com.foxrainbxm.skmin.base.Popup1Button;

/*
 * CATEGORY TAB
 */
public class Scenario2_1 extends BaseFragment implements OnRefreshListener{
	
	private static Scenario2_1 instance = null;
	
	
	
	private View headerView = null;
	public boolean loadingYN = false;

	View view = null;
	FoxRainBXM myapp = null;
	SwipeRefreshLayout swipeLayout = null;
	Context mContext;
	
	int mCatType;					// 카테고리 종류 (1: 직종별인터뷰, 2: 오픈컨텐츠, 3: 관련뉴스)
	int mContentIndex = 0;			// 현재 콘텐츠 페이지 (1페이지는 20개)	

	Typeface mTypeface;

	ArrayList<ContentVO> mTopItems;		// 위쪽 2개 포스트 데이타
	ArrayList<ContentVO> mListItems;	// 아래쪽 나머지 데이타
	boolean mIsContentsEnd = true;		// 마지막 콘텐츠 인지 정보 (더 있는지)

	LinearLayout mTopLeftLayout;
	LinearLayout mTopRightLayout;
	TextView mMoreButton;

	ExpandableHeightListView mListView;
	CustomListAdapter mListAdapter;
	
	public static Scenario2_1 getInstance() {
		if(instance == null) 
			instance = new Scenario2_1(1);
		return instance;
	}
	
	public Scenario2_1(int type) {
		super();
		mContext = getBaseActivity();
		mCatType = type;
		mContentIndex = 0;
	}
	
	public static Scenario2_1 create(int pageNumber) {
		Scenario2_1 fragment = new Scenario2_1(pageNumber);
		Bundle args = new Bundle();
		args.putInt("page", pageNumber);
		fragment.setArguments(args);
		return fragment;
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		if (view != null) {
			ViewGroup parent = (ViewGroup) view.getParent();
			if (parent != null)
				parent.removeView(view);
			
		} else {
			view = inflater.inflate(R.layout.scen00014, container, false);
			myapp = (FoxRainBXM) getActivity().getApplicationContext();
			initView();
		}
		
		return view;
	}
	
	@Override
	public void onResume() {
//		mTopItems.clear();
//		mListItems.clear();
//		getDataFromServer();
		super.onResume();
	}
	
	@Override
	public void onStart() {
		super.onStart();
	}
	
	
	// 뷰 초기화 (데이터 로딩 전)
	private void initView() {
		instance = getInstance();
		headerView = getActivity().getLayoutInflater().inflate(R.layout.scen00014_header, null);
		
		mTopLeftLayout = (LinearLayout)headerView.findViewById(R.id.contentLeft);
		mTopRightLayout = (LinearLayout)headerView.findViewById(R.id.contentRight);
		mListView = (ExpandableHeightListView)view.findViewById(R.id.listView1);
		swipeLayout  = (SwipeRefreshLayout) view.findViewById(R.id.swype1);
		swipeLayout.setOnRefreshListener(this);
////		swipeLayout.setRefreshing(true);
		swipeLayout.setColorScheme(R.color.blue, R.color.purple, R.color.green, R.color.orange);
		// 로딩전에 콘텐츠를 가려줌
		mListView.addHeaderView(headerView);
		hideView(); 

		// 콘텐츠 변수 초기화
		mTopItems = new ArrayList<ContentVO>();
		mListItems = new ArrayList<ContentVO>();

		// 폰트 초기화
		if (!NanumFont.getInstance().isInited()) {
			NanumFont.getInstance().init(getActivity().getAssets());
		}
		
		// 이미지 로더 초기화

		// 하단 리스트뷰 초기화
		mListView = (ExpandableHeightListView)view.findViewById(R.id.listView1);
		mListView.setFocusable(false);
		mListView.setExpanded(true);

		// 서버로 부터 Category 콘텐츠 받아옴
		getDataFromServer();
			
	}
	
	private void showView() {
		//mTopLeftLayout.setVisibility(View.VISIBLE);
		//mTopRightLayout.setVisibility(View.VISIBLE);
		mListView.setVisibility(View.VISIBLE);
	}
	
	private void hideView() {
		//mTopLeftLayout.setVisibility(View.INVISIBLE);
		//mTopRightLayout.setVisibility(View.INVISIBLE);
		mListView.setVisibility(View.INVISIBLE);
	}

	public void onResumeFragment() {
		mCatType = 1;
		getDataFromServer();
	}
	
	public void getDataFromServer() {
		HttpContentApi httpApi = new HttpContentApi(getBaseActivity());
		httpApi.contentCategory(mCatType, mContentIndex, new OnContentTaskResultListener() {
			@Override
			public void onTaskResult(boolean success, String result) {
				
				if (success) {
					setDataFromJson(result);
					
					setView();
				}
				else {
					new Popup1Button(getBaseActivity(), "데이타를 가져오지 못했습니다.",null).show(); 
				}
			}
		});
	}
	
	@Override
	public void onDestroy() {
		super.onDestroy();
//		instance = null;
	}
	
	private void setDataFromJson(String jsonStr) {
		
		
		ObjectMapper m = new ObjectMapper();
		try {
			
			JsonNode rootNode = m.readTree(jsonStr);
			
			
			for (JsonNode node : rootNode.path("contents")) {
				
				ContentVO content = new ContentVO();
				content.setPostNo(node.path("postno").asInt());
				content.setTitle(node.path("title").asText());
				content.setContent(ContentMessageParser.getContentFromMessage(node.path("contents").asText()));
				content.setCoverPhoto(ContentMessageParser.getCoverImageFromMessage(node.path("contents").asText()));
				
//				Log.e("TAG", "Image URL :: " + ContentMessageParser.getCoverImageFromMessage(node.path("contents").asText()));
//				Log.e("TAG", "Message Text :: " + ContentMessageParser.getContentFromMessage(node.path("contents").asText()));
				
				content.setHeartCount(node.path("c_heart").asInt());
				content.setReplyCount(node.path("c_reply").asInt());
				content.setScrapCount(node.path("c_scrap").asInt());
				
				if (mTopItems.size() < 2) {
//					Log.d("IMAGE_TAG", "Category Type :: " + content.getTitle());
//					Log.d("IMAGE_TAG", "Cover Url  :: " + content.getCoverPhoto());
					mTopItems.add(content);
				}
				else {
					mListItems.add(content);
				}
				
			}	
			mIsContentsEnd = rootNode.path("contents_end").asBoolean();

		} catch (Exception e) {
			e.printStackTrace();
		} 
	}
	
	private void setMoreDataFromJson(String jsonStr) {
		
		ObjectMapper m = new ObjectMapper();
		try {
			
			JsonNode rootNode = m.readTree(jsonStr);
			
			for (JsonNode node : rootNode.path("contents")) {
				
				ContentVO content = new ContentVO();
				content.setPostNo(node.path("postno").asInt());
				content.setTitle(node.path("title").asText());
				content.setContent(ContentMessageParser.getContentFromMessage(node.path("contents").asText()));
				content.setCoverPhoto(ContentMessageParser.getCoverImageFromMessage(node.path("contents").asText()));
				content.setHeartCount(node.path("c_heart").asInt());
				content.setReplyCount(node.path("c_reply").asInt());
				content.setScrapCount(node.path("c_scrap").asInt());
				mIsContentsEnd = rootNode.path("contents_end").asBoolean();

				mListItems.add(content);
				
			}	
			mIsContentsEnd = rootNode.path("contents_end").asBoolean();

		} catch (Exception e) {
			e.printStackTrace();
		}
		
		if (mIsContentsEnd) {
			mMoreButton.setVisibility(View.GONE);
		}

		mListAdapter.notifyDataSetChanged();
	}

	private void setView() {
		// TopLeftView 로드
		if (mTopItems.size() >= 1) {
			LinearLayout layout_t_l = (LinearLayout)headerView.findViewById(R.id.contentLeft);
			ImageView imageView_t_l = (ImageView)headerView.findViewById(R.id.iv_interview_t_l);
			TextView tv_interview_t_t =  (TextView)headerView.findViewById(R.id.tv_interview_t_t);
			
			TextView textView_t_l = (TextView)headerView.findViewById(R.id.tv_interview_t_l);
			TextView heartCount_t_l = (TextView)headerView.findViewById(R.id.heart_t_l);
			TextView replyCount_t_l = (TextView)headerView.findViewById(R.id.reply_t_l);
			TextView scrapCount_t_l = (TextView)headerView.findViewById(R.id.scrap_t_l);

			final ContentVO topLeftContent = mTopItems.get(0);
			if (topLeftContent.getCoverPhoto().length() != 0) {
				String urlStr = "";
				tv_interview_t_t.setVisibility(View.GONE);
				imageView_t_l.setVisibility(View.VISIBLE);
				if(topLeftContent.getCoverPhoto().startsWith("http:")) {
					urlStr = topLeftContent.getCoverPhoto();
				}
				else { 
					urlStr = Common.ImageUrl + topLeftContent.getCoverPhoto();
				}
				//String urlStr = HttpContentApi.getContentImageUrl(topLeftContent.getCoverPhoto(), 4);
				myapp.imageloder.displayImage(urlStr, imageView_t_l, myapp.options);
			}
			else {
				tv_interview_t_t.setText(topLeftContent.getContent());
				imageView_t_l.setVisibility(View.GONE);
				tv_interview_t_t.setVisibility(View.VISIBLE);
				//myapp.imageloder.displayImage("temp", imageView_t_l, myapp.options);
			}
			textView_t_l.setTypeface(mTypeface);
			textView_t_l.setText(TextUtil.getTitleArrange(topLeftContent.getTitle()));
//			TextUtil.applyNewLineStr(textView_t_l);
			heartCount_t_l.setText(String.valueOf(topLeftContent.getHeartCount()));
			replyCount_t_l.setText(String.valueOf(topLeftContent.getReplyCount()));
			scrapCount_t_l.setText(String.valueOf(topLeftContent.getScrapCount()));

			layout_t_l.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					startDetailView(topLeftContent.getPostNo());
				}
			});
		}
		
		// TopRightView 로드
		if (mTopItems.size() >= 2) {
			LinearLayout layout_t_r = (LinearLayout)headerView.findViewById(R.id.contentRight);
			ImageView imageView_t_r = (ImageView)headerView.findViewById(R.id.iv_interview_t_r);
			TextView textView_t_r = (TextView)headerView.findViewById(R.id.tv_interview_t_r);
			TextView heartCount_t_r = (TextView)headerView.findViewById(R.id.heart_t_r);
			TextView replyCount_t_r = (TextView)headerView.findViewById(R.id.reply_t_r);
			TextView scrapCount_t_r = (TextView)headerView.findViewById(R.id.scrap_t_r);
			TextView tv_interview_r_t = (TextView)headerView.findViewById(R.id.tv_interview_r_t);
			
			final ContentVO topRightContent = mTopItems.get(1);
			if (topRightContent.getCoverPhoto().length() != 0) {
				imageView_t_r.setVisibility(View.VISIBLE);
				tv_interview_r_t.setVisibility(View.GONE);
				String urlStr = "";
				if(topRightContent.getCoverPhoto().startsWith("http:")) {
					urlStr = topRightContent.getCoverPhoto();
				}
				else { 
					urlStr = Common.ImageUrl + topRightContent.getCoverPhoto();
				}
				//String urlStr = HttpContentApi.getContentImageUrl(topRightContent.getCoverPhoto(), 4);
				myapp.imageloder.displayImage(urlStr, imageView_t_r, myapp.options);
			}
			else {
				tv_interview_r_t.setText(topRightContent.getContent());
				imageView_t_r.setVisibility(View.GONE);
				tv_interview_r_t.setVisibility(View.VISIBLE);
			//	myapp.imageloder.displayImage("temp", imageView_t_r, myapp.options);
			}
			textView_t_r.setTypeface(mTypeface);
			textView_t_r.setText(TextUtil.getTitleArrange(topRightContent.getTitle()));
//			TextUtil.applyNewLineStr(textView_t_r);
			heartCount_t_r.setText(String.valueOf(topRightContent.getHeartCount()));
			replyCount_t_r.setText(String.valueOf(topRightContent.getReplyCount()));
			scrapCount_t_r.setText(String.valueOf(topRightContent.getScrapCount()));

			layout_t_r.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					startDetailView(topRightContent.getPostNo());
				}
			});
		}
		
		
		// ListView 로드
		mListAdapter = new CustomListAdapter(getActivity(), mListItems);
		mListView.setAdapter(mListAdapter);
		mListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				startDetailView(mListItems.get(position).getPostNo());
			}
		});
		
		// 콘텐츠 더보기 이벤트
		mMoreButton = (TextView)view.findViewById(R.id.more_button);
		mMoreButton.setOnClickListener(new OnClickListener() {
			
			FragmentMain context = getBaseActivity();
			@Override
			public void onClick(View v) {
				HttpContentApi httpApi = new HttpContentApi(context);
				httpApi.contentCategory(mCatType, mContentIndex + 1, new OnContentTaskResultListener() {
					@Override
					public void onTaskResult(boolean success, String result) {
						if (success) {							
							mContentIndex ++;
							setMoreDataFromJson(result);
						}
						else {
							new Popup1Button(mContext, "데이타를 가져오지 못했습니다.",null).show(); 
						}
						
					}
				});
			}
		});

		// 더보기 버튼 셋팅
		if (!mIsContentsEnd) {
			mMoreButton.setVisibility(View.VISIBLE);
		}
		// 로딩후에 콘텐츠를 보여줌
		showView();

	}
	
	private void startDetailView(int postNo) {
		
		if (postNo == 0) {
			return;
		}

		Intent intent = new Intent(getActivity(), ContentDetailView.class);
		intent.putExtra("postNo", postNo);
		intent.putExtra("viewtype", mCatType);
		startActivity(intent);
	}

	private class CustomListAdapter extends BaseAdapter {

		private Context mContext;
    	private ArrayList<ContentVO> items;

		public CustomListAdapter(Context context, ArrayList<ContentVO> items) {
    		super();
    		this.mContext = context;
    		this.items = items;
		}
		
		@Override
		public int getCount() {
			return items.size();
		}

		@Override
		public Object getItem(int position) {
			return items.get(position);
		}

		@Override
		public long getItemId(int position) {
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolder vh;
			
			if (convertView == null) {
				convertView = View.inflate(mContext, R.layout.scen00014_sub, null);
				
				vh = new ViewHolder();
				vh.title = (TextView)convertView.findViewById(R.id.sml_title);
				vh.content = (TextView)convertView.findViewById(R.id.sml_content);
				vh.heartCount = (TextView)convertView.findViewById(R.id.sml_heart);
				vh.replyCount = (TextView)convertView.findViewById(R.id.sml_reply);
				vh.scrapCount = (TextView)convertView.findViewById(R.id.sml_scrap);
				vh.coverImage = (ImageView)convertView.findViewById(R.id.sml_image);
				vh.sml_textview = (TextView)convertView.findViewById(R.id.sml_textview);
				
				//vh.title.setTypeface(mTypeface);
				
				convertView.setTag(vh);
			}
			else {	
				vh = (ViewHolder)convertView.getTag();
			}
			
			String title = String.valueOf(TextUtil.getTitleArrange(items.get(position).getTitle()));
			String content = String.valueOf(TextUtil.getContentArrange(items.get(position).getContent()));
			
			title = title.replace("\n", "");
			content = content.replace("\n", "");
			
			vh.title.setTypeface(mTypeface);
			vh.title.setText(title);
			vh.title.setTypeface(mTypeface);
			vh.content.setText(content);
			
			vh.heartCount.setText(String.valueOf(items.get(position).getHeartCount()));
			vh.replyCount.setText(String.valueOf(items.get(position).getReplyCount()));
			vh.scrapCount.setText(String.valueOf(items.get(position).getScrapCount()));

//			Log.d("COVER_IMAGE", "title :: " + String.valueOf(items.get(position).getTitle()));
//			Log.d("COVER_IMAGE", "position :: " + position + "/image :: "+ items.get(position).getCoverPhoto());
			String coverPhoto = items.get(position).getCoverPhoto().toString();
//			Log.d("TAG", "Cover Photo :: " + coverPhoto);
			if (items.get(position).getCoverPhoto().length() != 0) {
				String urlStr = "";
				vh.sml_textview.setVisibility(View.GONE);
				vh.coverImage.setVisibility(View.VISIBLE);
				if(items.get(position).getCoverPhoto().startsWith("http")){
					urlStr = items.get(position).getCoverPhoto();
				}else{
					urlStr = Common.ImageUrl + items.get(position).getCoverPhoto();	
				}
				//String urlStr = HttpContentApi.getContentImageUrl(items.get(position).getCoverPhoto(), 2);
				myapp.imageloder.displayImage(urlStr, vh.coverImage, myapp.options);
				//ImageLoader.getInstance().displayImage
			}
			else {
				
				vh.sml_textview.setText(items.get(position).getContent());
				vh.sml_textview.setVisibility(View.VISIBLE);
				vh.coverImage.setVisibility(View.GONE);
				//myapp.imageloder.displayImage("temp", vh.coverImage, myapp.options);
			}

			return convertView;
		}

		class ViewHolder {
			public TextView title; 
			public TextView content;
			public TextView heartCount; 
			public TextView replyCount; 
			public TextView scrapCount; 
			public ImageView coverImage;
			public TextView sml_textview;
			 
		}
		
	}

	@Override
	public void onRefresh() {
		mTopItems.clear();
		mListItems.clear();
		getDataFromServer();
	}

//	@Override
//	public void onRefresh() {
//		Toast.makeText(getBaseActivity(), "xtx", Toast.LENGTH_SHORT).show();
//	}

}












