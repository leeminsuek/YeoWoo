package com.foxrainbxm.base;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.view.Display;
import android.view.WindowManager;
import android.widget.ImageView;


public class ResizeVideoImageView extends ImageView
{
	Context con;
	boolean flag = true;
	public ResizeVideoImageView(Context context)
	{
		super(context);
	}

	public ResizeVideoImageView(Context context, AttributeSet attrs)
	{
		super(context, attrs);
		con = context;
	}

	@Override
	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {

		Drawable d = getDrawable();
		if(d != null){			
			int width = d.getIntrinsicWidth();
			int height = d.getIntrinsicHeight();
			
			Display display = ((WindowManager) con.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay(); 
			int screenWidth = display.getWidth();	
			int screenHeight = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 250, getResources().getDisplayMetrics());;

			int margin10 = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 15, getResources().getDisplayMetrics());
			screenWidth = screenWidth - (margin10 * 2);
			
			if(width > screenWidth)
			{
				float percent = width / screenWidth;

				height = (int) (height * percent);
				width = (int) (screenWidth / percent);
				
				if(height > screenHeight) {
					height  = screenHeight;
					this.setScaleType(ScaleType.CENTER_CROP);
				}
				
				setMeasuredDimension(width, height);
			}
			else
			{
				float percent = screenWidth / width;
				//
				height = (int) (height * percent);
								height = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, height, getResources().getDisplayMetrics());
				width = screenWidth;
				
				if(height > screenHeight) {
					height  = screenHeight;
					this.setScaleType(ScaleType.CENTER_CROP);
				}
				setMeasuredDimension(width, height);
			}
			
		}else{
			super.onMeasure(widthMeasureSpec, heightMeasureSpec);
		}
	}

	@Override
	protected void onLayout(boolean changed, int left, int top, int right,
			int bottom) {
		super.onLayout(changed, left, top, right, bottom);
	}
}